# Docker Compose file for Vapor
#
# Install Docker on your system to run and test
# your Vapor app in a production-like environment.
#
# Note: This file is intended for testing and does not
# implement best practices for a production deployment.
#
# Learn more: https://docs.docker.com/compose/reference/
#
#   Build images: docker compose build
#      Start app: docker compose up app
# Start database: docker compose up db
# Run migrations: docker compose run migrate
#       Stop all: docker compose down (add -v to wipe db)
#

volumes:
  db_data:
  pgadmin_data:
  
x-shared_environment: &shared_environment
  LOG_LEVEL: ${LOG_LEVEL:-debug}
  DATABASE_HOST: db
  DATABASE_NAME: vapor_database
  DATABASE_USERNAME: vapor_username
  DATABASE_PASSWORD: vapor_password
  AUTO_MIGRATE: "true"  # Enable auto-migration for local development
  
services:
  app:
    image: safeandbrave:latest
    build:
      context: .
    environment:
      <<: *shared_environment
    depends_on:
      - db
    ports:
      - '8080:8080'
    networks:
      - safeandbrave
    command: ["serve", "--env", "development", "--hostname", "0.0.0.0", "--port", "8080"]
    
  # Separate migration service for explicit migration runs
  migrate:
    image: safeandbrave:latest
    build:
      context: .
    environment:
      <<: *shared_environment
    depends_on:
      - db
    networks:
      - safeandbrave
    command: ["migrate", "--yes"]
    deploy:
      replicas: 0
      
  # Service to revert migrations
  revert:
    image: safeandbrave:latest
    build:
      context: .
    environment:
      <<: *shared_environment
    depends_on:
      - db
    networks:
      - safeandbrave
    command: ["migrate", "--revert", "--yes"]
    deploy:
      replicas: 0
      
  db:
    image: postgres:16-alpine
    volumes:
      - db_data:/var/lib/postgresql/data/pgdata
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: vapor_username
      POSTGRES_PASSWORD: vapor_password
      POSTGRES_DB: vapor_database
    ports:
      - '5432:5432'
    networks:
      - safeandbrave
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vapor_username -d vapor_database"]
      interval: 10s
      timeout: 5s
      retries: 5
      
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@example.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
    depends_on:
      - db
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - safeandbrave
      
networks:
  safeandbrave: